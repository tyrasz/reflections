What happens when you initialize a repository? Why do you need to do it?
	Initializes an empty git repository. Need to tell Git that you want it to be under git version control

How is the staging area different from the working directory and the repository? What value do you think it offers?
	It is different as it is an intermediate stage between working directory and repository. It offers a value in that it allows one to decide what files to commit to repository before actually committing it.

How can you use the staging area to make sure you have one commit per logical change?
	I can use the staging area to track which are the files that are changed per logical change and verify that it is indeed one commit per logical change.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
	When I would like to test a new feature or create something different but retain the original feature. I could also see when the history of the changes were made for the new features. Branches would allow me to test the new code while retaining the old

How do the diagrams help you visualize the branch structure?
	They help me understand where branches link to the nearest or most recent or commit in common. They also let me know which commit might not be logged, since they are not on any branch.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
	They incorporate the changes from both versions into a single commit. We represent it this way because commits are the core of git and it still allows us to see the branches before the merge

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
	Pros: Faster, no need to manually scan the code 
	Cons: Bug, conflicts between code